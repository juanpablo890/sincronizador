
import com.microsoft.sqlserver.jdbc.SQLServerResource;
import controller.ConnectionDB;
//import controller.Logger;
import java.awt.Dimension;
import java.io.IOException;
import java.sql.Connection;
import java.sql.SQLException;
import java.util.ResourceBundle;
import java.util.logging.FileHandler;
import java.util.logging.Level;
import java.util.logging.LogRecord;
import java.util.logging.Logger;
import java.util.logging.SimpleFormatter;
import javax.swing.JOptionPane;
import javax.swing.SwingWorker;
import javax.swing.UIManager;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author n6y
 */



public class MotorTISA extends javax.swing.JFrame {

    /**
     * Creates new form MotorTISA
     */
    Connection DBConnection;
    Logger logger = Logger.getLogger(MotorTISA.class.getName());
    public MotorTISA() throws IOException {
        
        initComponents();
        FileHandler fh = new FileHandler("tisa.log");
        fh.setFormatter(new SimpleFormatter());
        logger.addHandler(fh);
        logger.setLevel(Level.FINE);
 checkConnection();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFrame1 = new javax.swing.JFrame();
        pgbtn = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jMenuBar2 = new javax.swing.JMenuBar();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Motor AVL TISA");
        setBackground(new java.awt.Color(102, 204, 255));
        setResizable(false);

        pgbtn.setText("pb");
        pgbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pgbtnActionPerformed(evt);
            }
        });

        jButton2.setText("jButton2");
        jButton2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jMenu3.setText("Configuración");

        jMenuItem1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/config_icon.png"))); // NOI18N
        jMenuItem1.setText("Conexión de BD por defecto");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem1);
        jMenu3.add(jSeparator1);

        jMenuBar2.add(jMenu3);

        jMenu1.setText("Herramientas");

        jMenuItem2.setText("Ver archivo log...");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuBar2.add(jMenu1);

        setJMenuBar(jMenuBar2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pgbtn)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jButton2)
                .addContainerGap(197, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(34, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addGap(55, 55, 55)
                .addComponent(pgbtn)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        System.out.println("clic");
        jButton2.setEnabled(false);
        final SwingWorker worker = new SwingWorker() {
            @Override
            protected Object doInBackground() throws InterruptedException  {
                //throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
                int i=0;
                while(i<50){
                    System.out.println("w1: "+i++);
                    Thread.sleep(100000);
                }
                return null;
                
            }
        };
        worker.execute();
        final SwingWorker worker2 = new SwingWorker() {
            @Override
            protected Object doInBackground() throws InterruptedException  {
                //throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
                int i=0;
                while(i<50){
                    System.out.println("w2: "+i++);
                    Thread.sleep(100000);
                }
                return null;   
            }

            @Override
            protected void done() {
                jButton2.setEnabled(true);
            }
            
        };
        worker2.execute();
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                try {
//                    Thread.sleep(100000);
//                } catch (InterruptedException ex) {
//                    Logger.getLogger(MotorTISA.class.getName()).log(Level.SEVERE, null, ex);
//                }
//                new Configuration().setVisible(true);
//                
//            }
//        });
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
               
                new Configuration().setVisible(true);
                
            }
        });
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void pgbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pgbtnActionPerformed
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//               
//                new DatabaseConnectionProgress().setVisible(true);
//                
//            }
//        });
    }//GEN-LAST:event_pgbtnActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        //leer archivo log y enviar a JFrame
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new LogViewer().setVisible(true);
            }
        });
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void checkConnection() throws IOException{
        System.out.println("conectar a BD...");
        
        
        
        System.out.println();
        
        //logger = Logger.getLogger(getClass().getName());
        
 
           
       
        
        try {
            
            DBConnection = new ConnectionDB().DBConnection(); //conectar a BD por default
            logger.fine("conexion realizada");    
        } catch (IOException ex) {
            
            JOptionPane.showMessageDialog(rootPane, "El archivo de configuración de BD por defecto no existe!", "archivo de configuración no encontrado", JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(MotorTISA.class.getName()).log(Level.SEVERE, "archivo properties inexistente", ex);
        } catch (SQLException ex) {
            Logger.getLogger(MotorTISA.class.getName()).log(Level.SEVERE, "error al conectar a la base de datos", ex);
            UIManager.put("OptionPane.minimumSize",new Dimension(100,100));
            JOptionPane.showMessageDialog(rootPane, ex.getMessage(), "error de configuración de conexión a base de datos", JOptionPane.ERROR_MESSAGE);

           
        }
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MotorTISA.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MotorTISA.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MotorTISA.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MotorTISA.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
//        final SwingWorker worker2 = new SwingWorker() {
//            @Override
//            protected Object doInBackground() throws InterruptedException  {
//                new Configuration().setVisible(true);
//                return null;
//            }
//
//            @Override
//            protected void done() {
//                
//            }
//            
//        };
//        
//        final SwingWorker worker = new SwingWorker() {
//            @Override
//            protected Object doInBackground() throws InterruptedException  {
//                Thread.sleep(100000);
//                new Configuration().setVisible(true);
//                return null;
//            }
//
//            @Override
//            protected void done() {
//                
//            }
//            
//        };
//        worker.execute();
//        worker2.execute();
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                try {
                    
                    MotorTISA motorTISA = new MotorTISA();
                    motorTISA.setVisible(true);
                    
                } catch (IOException ex) {
                    Logger.getLogger(MotorTISA.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
//        Thread thread = new Thread(new Runnable() {
//            @Override
//            public void run() {
//                new Configuration().setVisible(true);
//            }
//        });
//        thread.start();
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton2;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JButton pgbtn;
    // End of variables declaration//GEN-END:variables
}
